generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Baby {
  id           Int           @id @default(autoincrement())
  name         String
  email        String?
  createdAt    DateTime      @default(now())
  sleepLogs    SleepLog[]
  diaperLogs   DiaperLog[]
  feedingLogs  FeedingLog[]
  bottleFeeds  BottleFeed[]
  dailyNotes   DailyNote[]   // ðŸ‘ˆ Add this line
}



model SleepLog {
  id        Int           @id @default(autoincrement())
  babyId    Int
  baby      Baby          @relation(fields: [babyId], references: [id], onDelete: Cascade)
  start     DateTime
  end       DateTime?
  note      String?       @db.Text
  createdAt DateTime      @default(now())

  // ðŸ‘‡ Add this line to complete the relation
  sleepChecks SleepCheck[]
}




model DiaperLog {
  id        Int      @id @default(autoincrement())
  babyId    Int
  baby      Baby     @relation(fields: [babyId], references: [id], onDelete: Cascade)
  time      DateTime @default(now())
  type      DiaperType
  note      String?  @db.Text
}

model FeedingLog {
  id        Int      @id @default(autoincrement())
  babyId    Int
  baby      Baby     @relation(fields: [babyId], references: [id], onDelete: Cascade)
  time      DateTime @default(now())
  mealType  MealType
  menu      String
  quantity  Int
  note      String?  @db.Text
}

model BottleFeed {
  id        Int      @id @default(autoincrement())
  babyId    Int
  baby      Baby     @relation(fields: [babyId], references: [id], onDelete: Cascade)
  time      DateTime @default(now())
  volumeMl  Int
  note      String?  @db.Text
}

model DailyNote {
  id      Int      @id @default(autoincrement())
  babyId  Int
  date    DateTime
  content String

  baby    Baby     @relation(fields: [babyId], references: [id], onDelete: Cascade)

  @@unique([babyId, date], name: "babyId_date")
}

model SleepCheck {
  id        Int      @id @default(autoincrement())
  sleepLog  SleepLog @relation(fields: [sleepLogId], references: [id], onDelete: Cascade)
  sleepLogId Int
  checkedAt DateTime @default(now())
}




enum DiaperType {
  WET
  SOLID
  BOTH
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
}
